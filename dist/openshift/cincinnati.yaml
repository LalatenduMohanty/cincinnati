---
apiVersion: v1
kind: Template
metadata:
  name: cincinnati
objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: cincinnati
      name: cincinnati
    spec:
      replicas: 1
      selector:
        app: cincinnati
        deploymentconfig: cincinnati
      strategy:
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            app: cincinnati
            deploymentconfig: cincinnati
        spec:
          containers:
            - image: ${IMAGE}:${IMAGE_TAG}
              imagePullPolicy: Always
              name: cincinnati-graph-builder
              env:
                - name: ADDRESS
                  valueFrom:
                    configMapKeyRef:
                      key: gb.address
                      name: cincinnati
                - name: STATUS_ADDRESS
                  valueFrom:
                    configMapKeyRef:
                      key: gb.status.address
                      name: cincinnati
                - name: REGISTRY
                  valueFrom:
                    configMapKeyRef:
                      key: gb.registry
                      name: cincinnati
                - name: REPOSITORY
                  valueFrom:
                    configMapKeyRef:
                      key: gb.repository
                      name: cincinnati
                - name: GB_LOG_VERBOSITY
                  valueFrom:
                    configMapKeyRef:
                      key: gb.log.verbosity
                      name: cincinnati
              command:
                - ${GB_BINARY}
              args: [
                "-$(GB_LOG_VERBOSITY)",
                "--service.address", "$(ADDRESS)",
                "--service.port", "${GB_PORT}",
                "--status.address", "$(STATUS_ADDRESS)",
                "--status.port", "${GB_STATUS_PORT}",
                "--upstream.registry.url", "$(REGISTRY)",
                "--upstream.registry.repository", "$(REPOSITORY)",
              ]
              ports:
                - name: graph-builder
                  containerPort: ${{GB_PORT}}
                - name: status-gb
                  containerPort: ${{GB_STATUS_PORT}}
              livenessProbe:
                httpGet:
                  path: /liveness
                  port: ${{GB_STATUS_PORT}}
                initialDelaySeconds: 3
                periodSeconds: 10
                timeoutSeconds: 3
              readinessProbe:
                httpGet:
                  path: /readiness
                  port: ${{GB_STATUS_PORT}}
                initialDelaySeconds: 3
                periodSeconds: 10
                timeoutSeconds: 3
              resources:
                limits:
                  cpu: ${GB_CPU_LIMIT}
                  memory: ${GB_MEMORY_LIMIT}
                requests:
                  cpu: ${GB_CPU_REQUEST}
                  memory: ${GB_MEMORY_REQUEST}
            - image: ${IMAGE}:${IMAGE_TAG}
              name: cincinnati-policy-engine
              imagePullPolicy: Always
              env:
                - name: ADDRESS
                  valueFrom:
                    configMapKeyRef:
                      key: pe.address
                      name: cincinnati
                - name: PE_STATUS_ADDRESS
                  valueFrom:
                    configMapKeyRef:
                      key: pe.status.address
                      name: cincinnati
                - name: UPSTREAM
                  valueFrom:
                    configMapKeyRef:
                      key: pe.upstream
                      name: cincinnati
                - name: PE_LOG_VERBOSITY
                  valueFrom:
                    configMapKeyRef:
                      key: pe.log.verbosity
                      name: cincinnati
                - name: "PE_MANDATORY_CLIENT_PARAMETERS"
                  valueFrom:
                    configMapKeyRef:
                      key: pe.mandatory_client_parameters
                      name: cincinnati
              command:
                - ${PE_BINARY}
              args: [
                "-$(PE_LOG_VERBOSITY)",
                "--service.address", "$(ADDRESS)",
                "--service.mandatory_client_parameters", "$(PE_MANDATORY_CLIENT_PARAMETERS)",
                "--service.path_prefix", "${PE_PATH_PREFIX}",
                "--service.port", "${PE_PORT}",
                "--status.address", "$(PE_STATUS_ADDRESS)",
                "--status.port", "${PE_STATUS_PORT}",
                "--upstream.cincinnati.url", "$(UPSTREAM)",
              ]
              ports:
                - name: policy-engine
                  containerPort: ${{PE_PORT}}
                - name: status-pe
                  containerPort: ${{PE_STATUS_PORT}}
              livenessProbe:
                tcpSocket:
                  port: ${{PE_PORT}}
                initialDelaySeconds: 3
                periodSeconds: 10
                timeoutSeconds: 3
              resources:
                limits:
                  cpu: ${PE_CPU_LIMIT}
                  memory: ${PE_MEMORY_LIMIT}
                requests:
                  cpu: ${PE_CPU_REQUEST}
                  memory: ${PE_MEMORY_REQUEST}
      triggers:
        - type: ConfigChange
  - apiVersion: v1
    kind: Service
    metadata:
      name: cincinnati-graph-builder
      labels:
        app: cincinnati-graph-builder
    spec:
      ports:
        - name: graph-builder
          protocol: TCP
          port: ${{GB_PORT}}
          targetPort: ${{GB_PORT}}
        - name: status-gb
          protocol: TCP
          port: ${{GB_STATUS_PORT}}
          targetPort: ${{GB_STATUS_PORT}}
      selector:
        deploymentconfig: cincinnati
  - apiVersion: v1
    kind: Service
    metadata:
      name: cincinnati-policy-engine
      labels:
        app: cincinnati-policy-engine
    spec:
      ports:
        - name: policy-engine
          protocol: TCP
          port: 80
          targetPort: ${{PE_PORT}}
        - name: status-pe
          protocol: TCP
          port: ${{PE_STATUS_PORT}}
          targetPort: ${{PE_STATUS_PORT}}
      selector:
        deploymentconfig: cincinnati
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: cincinnati
    data:
      gb.address: "0.0.0.0"
      gb.status.address: "0.0.0.0"
      gb.registry: "quay.io"
      gb.repository: ${{GB_CINCINNATI_REPO}}
      gb.log.verbosity: ${{GB_LOG_VERBOSITY}}
      pe.address: "0.0.0.0"
      pe.status.address: "0.0.0.0"
      pe.upstream: "http://localhost:8080/v1/graph"
      pe.log.verbosity: ${{PE_LOG_VERBOSITY}}
      pe.mandatory_client_parameters: "channel"

parameters:
  - name: IMAGE
    value: "quay.io/app-sre/cincinnati"
    displayName: cincinnati image
    description: cincinnati docker image. Defaults to quay.io/app-sre/cincinnati
  - name: IMAGE_TAG
    value: "1b2c529"
    displayName: cincinnati version
    description: cincinnati version which defaults to latest
  - name: GB_MEMORY_LIMIT
    value: "512Mi"
    displayName: "Graph-builder memory limit"
    description: "Maximum amount of memory (bytes) allowed for graph-builder (default: 523Mi)"
  - name: GB_CPU_LIMIT
    value: "750m"
    displayName: "Graph-builder CPU limit"
    description: "Maximum amount of CPU (millicores) allowed for graph-builder (default: 750m)"
  - name: PE_MEMORY_LIMIT
    value: "512Mi"
    displayName: "Policy-engine memory limit"
    description: "Maximum amount of memory (bytes) allowed for policy-engine (default: 512Mi)"
  - name: PE_CPU_LIMIT
    value: "750m"
    displayName: "Policy-engine CPU limit"
    description: "Maximum amount of CPU (millicores) allowed for policy-engine (default: 750m)"
  - name: GB_MEMORY_REQUEST
    value: "128Mi"
    displayName: "Graph-builder memory request"
    description: "Requested amount of memory (bytes) allowed for graph-builder (default: 128Mi)"
  - name: GB_CPU_REQUEST
    value: "350m"
    displayName: "Graph-builder CPU request"
    description: "Requested amount of CPU (millicores) allowed for graph-builder (default: 350m)"
  - name: PE_MEMORY_REQUEST
    value: "128Mi"
    displayName: "Policy-engine memory request"
    description: "Requested amount of memory (bytes) allowed for policy-engine (default: 128Mi)"
  - name: PE_CPU_REQUEST
    value: "350m"
    displayName: "Policy-engine CPU request"
    description: "Requested amount of CPU (millicores) allowed for policy-engine (default: 350m)"
  - name: GB_PORT
    value: "8080"
    displayName: Graph builder port
  - name: GB_STATUS_PORT
    value: "9080"
    displayName: Graph builder status port
  - name: PE_PORT
    value: "8081"
    displayName: Policy engine port
  - name: PE_STATUS_PORT
    value: "9081"
    displayName: Policy engine status port
  - name: PE_PATH_PREFIX
    value: "/api/upgrades_info"
    displayName: Policy engine path prefix
  - name: GB_LOG_VERBOSITY
    value: "vvv"
    displayName: Graph builder log verbosity
  - name: PE_LOG_VERBOSITY
    value: "vv"
    displayName: Policy engine log verbosity
  - name: GB_CINCINNATI_REPO
    value: "openshift-release-dev/ocp-release"
    displayName: Graph builder quay repo
  - name: GB_BINARY
    value: /usr/bin/graph-builder
    displayName: Path to graph-builder binary
  - name: PE_BINARY
    value: /usr/bin/policy-engine
    displayName: Path to policy-engine binary
  - name: GB_UPSTREAM_FETCH_CONCURRENCY
    value: "16"
    displayName: Concurrency when fetching the upstream metadata
